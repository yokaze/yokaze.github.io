<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2018 on yokaze.github.io</title>
    <link>https://yokaze.github.io/2018/</link>
    <description>Recent content in 2018 on yokaze.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; Rue Yokaze</copyright>
    <lastBuildDate>Sat, 24 Feb 2018 12:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://yokaze.github.io/2018/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>pybind11 上の matplotlib で macosx バックエンドを使う</title>
      <link>https://yokaze.github.io/2018/02/24/</link>
      <pubDate>Sat, 24 Feb 2018 12:00:00 +0900</pubDate>
      
      <guid>https://yokaze.github.io/2018/02/24/</guid>
      <description>macOS 上で matplotlib を立ち上げると、Python is not installed as a framework というエラーが出ることがあります。 この問題は（環境によるのかもしれませんが）以下の方法で再現</description>
    </item>
    
    <item>
      <title>mac に xtensor をインストールする</title>
      <link>https://yokaze.github.io/2018/02/12/</link>
      <pubDate>Mon, 12 Feb 2018 20:30:00 +0900</pubDate>
      
      <guid>https://yokaze.github.io/2018/02/12/</guid>
      <description>xtensor は C++ で多次元配列を扱うためのライブラリです。 このライブラリは Homebrew または Anaconda を使ってインストールすることができます。 Homebrew でインストール Homebrew は mac 環境の</description>
    </item>
    
    <item>
      <title>pybind11 で C&#43;&#43; から Python インタプリタを実行する</title>
      <link>https://yokaze.github.io/2018/02/11/</link>
      <pubDate>Sun, 11 Feb 2018 11:30:00 +0900</pubDate>
      
      <guid>https://yokaze.github.io/2018/02/11/</guid>
      <description>pybind11 の pybind11::scoped_interpreter を使うと、C++ から Python インタプリタを起動することができます。 #include &amp;lt;pybind11/embed.h&amp;gt; #include &amp;lt;pybind11/pybind11.h&amp;gt; namespace py = pybind11; int main() { py::scoped_interpreter interpreter; py::print(&amp;quot;Hello, world!&amp;quot;); } コンパイルには Python.h が必要です。 端末上に複数の</description>
    </item>
    
    <item>
      <title>mac に pybind11 をインストールする</title>
      <link>https://yokaze.github.io/2018/02/05/</link>
      <pubDate>Mon, 05 Feb 2018 22:36:44 +0900</pubDate>
      
      <guid>https://yokaze.github.io/2018/02/05/</guid>
      <description>pybind11 は Homebrew, pip3, Anaconda のいずれかの方法でインストールできます。 Homebrew でインストール Homebrew は mac 環境の汎用パッケージマネージャーです。 Homebrew を使って pybind11 をインストールする</description>
    </item>
    
    <item>
      <title>pip のディストリビューションがインストールしたファイルの一覧を表示する</title>
      <link>https://yokaze.github.io/2018/02/04/</link>
      <pubDate>Sun, 04 Feb 2018 21:39:56 +0900</pubDate>
      
      <guid>https://yokaze.github.io/2018/02/04/</guid>
      <description>ディストリビューション（パッケージ）がインストールしたファイルの一覧は、インストール時に作成される RECORD ファイルに記録されています。 はじめに、p</description>
    </item>
    
    <item>
      <title>clang でシフト演算のビット数超過を警告する (-Wshift-count-overflow)</title>
      <link>https://yokaze.github.io/2018/01/29/</link>
      <pubDate>Mon, 29 Jan 2018 00:17:55 +0900</pubDate>
      
      <guid>https://yokaze.github.io/2018/01/29/</guid>
      <description>clang でシフト演算のビット数超過を警告するには、-Wshift-count-overflow オプションを指定します。 #include &amp;lt;stdio.h&amp;gt; int main() { int x = 8; int y = x &amp;lt;&amp;lt;</description>
    </item>
    
    <item>
      <title>clang で range-based for の暗黙コピーを警告する (-Wrange-loop-analysis)</title>
      <link>https://yokaze.github.io/2018/01/28/</link>
      <pubDate>Sun, 28 Jan 2018 19:48:59 +0900</pubDate>
      
      <guid>https://yokaze.github.io/2018/01/28/</guid>
      <description>clang で range-based for の暗黙コピーを警告するには、-Wrange-loop-analysis オプションを指定します。 次の例では const pair&amp;lt;const int, int&amp;gt;&amp;amp; で値を受け取るべきと</description>
    </item>
    
    <item>
      <title>swiftc で Hello World</title>
      <link>https://yokaze.github.io/2018/01/22/</link>
      <pubDate>Mon, 22 Jan 2018 22:07:42 +0900</pubDate>
      
      <guid>https://yokaze.github.io/2018/01/22/</guid>
      <description>swiftc コマンドで Hello world プログラムをビルドします。 print(&amp;quot;Hello world!&amp;quot;) $ swiftc sample.swift $ ./sample Hello world! swift コマンドを使うとコンソールから直接実行することもできます。 $ swift sample.swift Hello world! Tweet 参考資料</description>
    </item>
    
    <item>
      <title>clang で負のビットシフトを警告する (-Wshift-count-negative)</title>
      <link>https://yokaze.github.io/2018/01/18/</link>
      <pubDate>Thu, 18 Jan 2018 22:55:39 +0900</pubDate>
      
      <guid>https://yokaze.github.io/2018/01/18/</guid>
      <description>clang で負のビットシフトを警告するには、-Wshift-count-negative オプションを指定します。 #include &amp;lt;stdio.h&amp;gt; int main() { int x = 8; int y = x &amp;lt;&amp;lt; -1; printf(&amp;quot;%d\n&amp;quot;, y); }</description>
    </item>
    
    <item>
      <title>clang で 暗黙の符号変換を警告する (-Wsign-conversion)</title>
      <link>https://yokaze.github.io/2018/01/17/</link>
      <pubDate>Wed, 17 Jan 2018 20:41:18 +0900</pubDate>
      
      <guid>https://yokaze.github.io/2018/01/17/</guid>
      <description>clang で暗黙の符号変換を警告するには、-Wsign-conversion オプションを指定します。 int main() { unsigned int x = -1; } $ # macOS Sierra (10.12) $ clang sample.cpp -Wsign-conversion sample.cpp:3:22: warning: implicit conversion changes signedness:</description>
    </item>
    
    <item>
      <title>clang で 64bit 整数から 32bit 整数への暗黙の型変換を警告する (-Wshorten-64-to-32)</title>
      <link>https://yokaze.github.io/2018/01/16/</link>
      <pubDate>Tue, 16 Jan 2018 21:24:17 +0900</pubDate>
      
      <guid>https://yokaze.github.io/2018/01/16/</guid>
      <description>clang で 64bit 整数から 32bit 整数への暗黙の型変換を警告するには、-Wshorten-64-to-32 オプションを指定します。 #include &amp;lt;stdint.h&amp;gt; int main() { int64_t x = 1; int32_t y = x; }</description>
    </item>
    
    <item>
      <title>論文紹介: Feature Learning for Chord Recognition: The Deep Chroma Extractor</title>
      <link>https://yokaze.github.io/2018/01/13/</link>
      <pubDate>Sat, 13 Jan 2018 20:14:37 +0900</pubDate>
      
      <guid>https://yokaze.github.io/2018/01/13/</guid>
      <description>ISMIR 2016 で発表された、Deep Learning による和音認識の研究論文を読みました。 論文のモチベーション 著者らはまず、和音認識のレビュー論文 [M. McVicar et. al., 2014] を紹介し</description>
    </item>
    
    <item>
      <title>lldb で使えるコマンド一覧</title>
      <link>https://yokaze.github.io/2018/01/06/</link>
      <pubDate>Sat, 06 Jan 2018 14:01:24 +0900</pubDate>
      
      <guid>https://yokaze.github.io/2018/01/06/</guid>
      <description>lldb で入力できるコマンドをまとめました。 lldb のコマンド一覧（英語）は help コマンドで表示できます。 日本語訳は新規に書き起こしました。 $ # macOS Sierra (10.12) + Homebrew $</description>
    </item>
    
    <item>
      <title>論文紹介: Music Emotion Recognition: A State of the Art Review</title>
      <link>https://yokaze.github.io/2018/01/04/</link>
      <pubDate>Thu, 04 Jan 2018 22:14:22 +0900</pubDate>
      
      <guid>https://yokaze.github.io/2018/01/04/</guid>
      <description>表題のとおり、音楽感情認識のレビュー論文を読みました。 日本語の資料が少ないので、分かったことを簡単にまとめたいと思います。 章立て この論文は次</description>
    </item>
    
  </channel>
</rss>